{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main.router.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./routes/home/module\": [\n\t\t\"./src/app/routes/home/module.ts\",\n\t\t\"routes-home-module\"\n\t],\n\t\"./routes/me/module\": [\n\t\t\"./src/app/routes/me/module.ts\",\n\t\t\"routes-me-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","/*\nImport & configuration\n*/\n  // Angular\n  import { Component } from '@angular/core';\n\n  // Config.\n  @Component({\n    selector: 'app-root',\n    template: `\n      <app-header></app-header>\n      <main class=\"maxWidth\">\n        <router-outlet></router-outlet>\n      </main>\n    `\n  })\n//\n\n/*\nExport\n*/\n  export class AppComponent {}\n//","/*\nImport\n*/\n  // Angular\n  import { BrowserModule } from '@angular/platform-browser';\n  import { NgModule } from '@angular/core';\n  import { HttpClientModule } from '@angular/common/http';\n\n  // Inner\n  import { MainRouterModule } from \"./main.router\";\n  import { AppComponent } from './app.component';\n  import { HeaderComponent } from './shared/header/header.component';\n//\n\n/*\nDefine & export\n*/\n  @NgModule({\n    declarations: [ AppComponent, HeaderComponent, ],\n    imports: [\n      BrowserModule,\n      HttpClientModule,\n      MainRouterModule,\n    ],\n    bootstrap: [ AppComponent ]\n  })\n\n  // Export\n  export class AppModule { }\n//","/*\nImport\n*/\n    // Angular\n    import { ModuleWithProviders } from '@angular/core';\n    import { Routes, RouterModule } from \"@angular/router\";\n//\n\n/*\nDefine & export\n*/\n    // Define\n    const mainRoutes: Routes = [\n        {\n            path: '',\n            loadChildren: './routes/home/module#HomePageModule'\n        },\n        {\n            path: 'me',\n            loadChildren: './routes/me/module#MePageModule'\n        }\n    ];\n\n    // Export\n    export const MainRouterModule: ModuleWithProviders = RouterModule.forRoot(mainRoutes);\n//","/*\nImport & configuration\n*/\n  // Angular\n  import { Injectable } from '@angular/core';\n  import { HttpClient, HttpHeaders } from \"@angular/common/http\";\n  import { Observable, BehaviorSubject } from \"rxjs\";\n  import { shareReplay, filter, tap, map } from 'rxjs/operators';\n\n  // Inner\n  import { UserModel } from \"../models/user.model\";\n\n  // Set & export anonymous user data\n  export const ANONYMOUS_USER: UserModel = {\n    id: undefined,\n    email: undefined,\n    first_name: undefined,\n    last_name: undefined\n  };\n\n  // Config.\n  @Injectable({\n    providedIn: 'root'\n  })\n//\n\n\n/*\nExport\n*/\n  export class AuthService {\n\n    /*\n    Configuration\n    */\n      // Variables\n      private apiUrl = '/api/auth'\n      private subject = new BehaviorSubject<UserModel>(undefined);\n\n      // Observable\n      singleUser$: Observable<UserModel> = this.subject.asObservable().pipe(filter(singleUser => !!singleUser));\n      isLoggedIn$: Observable<boolean> = this.singleUser$.pipe(map (singleUser => {\n        // console.log(singleUser)\n        return !!singleUser.id\n      }));\n      isLoggedOut$: Observable<boolean> = this.isLoggedIn$.pipe(map(isLoggedIn => !isLoggedIn));\n\n      // Class injection\n      constructor(private HttpClient: HttpClient) {\n        // HttpClient.get('/api/auth/me').pipe(\n        //   tap(console.log))\n        //   .subscribe(user => this.subject.next(user ? user : ANONYMOUS_USER));\n      }\n    //\n\n    /*\n    Methods\n    */\n      // Créer une fonction pour enregistrer un utilisateur\n      public signUp( user: UserModel ): Promise<any> {\n\n        // Configurer la requête\n        let myHeader = new HttpHeaders().set( 'Content-Type', 'application/json')\n\n        // 3 paramêtre : url, data, header + clallback\n        return this.HttpClient.post(`${this.apiUrl}/register`, user, { headers: myHeader }).toPromise()\n        .then( (apiResponse: any) => {\n          this.subject.next(apiResponse.data.user);\n          return Promise.resolve(apiResponse);\n        })\n        .catch( apiResponse => Promise.reject(apiResponse) );\n      };\n\n      // Créer une fonction pour connecter un utilisateur\n      public login( email: String,  password: String ): Promise<any> {\n\n        // Configurer la requête\n        let myHeader = new HttpHeaders().set( 'Content-Type', 'application/json')\n\n        // 3 paramêtre : url, data, header + clallback\n        return this.HttpClient.post(`${this.apiUrl}/login`, {email, password}, { headers: myHeader }).toPromise()\n        .then( (apiResponse: any) => {\n          console.log(apiResponse)\n          this.subject.next(apiResponse.data.user);\n          console.log(this.subject)\n          return Promise.resolve(apiResponse);\n        })\n        .catch( apiResponse => Promise.reject(apiResponse) );\n      };\n\n      // Créer une fonction pour enregistrer un utilisateur\n      public userInfo(): Promise<any> {\n\n        // Configurer la requête\n        let myHeader = new HttpHeaders().set( 'Content-Type', 'application/json')\n\n        // 3 paramêtre : url, data, header + clallback\n        return this.HttpClient.get(`${this.apiUrl}/me`, { headers: myHeader }).toPromise()\n        .then( (apiResponse: any) => {\n          this.subject.next(apiResponse.data);\n          return Promise.resolve(apiResponse);\n        })\n        .catch( apiResponse => Promise.reject(apiResponse) );\n      };\n    //\n  }\n//","module.exports = \"<header class=\\\"maxWidth\\\">\\n  <h1>Open the podbay Hall</h1>\\n  <nav>\\n    <ul>\\n      <li *ngIf=\\\"isLoggedOut$ | async\\\">\\n        <button>Signin</button>\\n      </li>\\n      <li *ngIf=\\\"isLoggedIn$ | async\\\">\\n          <button (click)=\\\"Router.navigateByUrl('/me')\\\">me</button>\\n        </li>\\n    </ul>\\n    \\n  </nav>\\n</header>\"","/*\nImport & configuration\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from '@angular/router';\n  import { Observable } from \"rxjs\";\n\n  // Inner\n  import { AuthService } from \"../../service/auth.service\";\n  import { UserModel } from \"../../models/user.model\";\n\n  // Config.\n  @Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html'\n  })\n//\n\n/*\nExport\n*/\n  export class HeaderComponent implements OnInit {\n\n    public isLoggedIn$: Observable<boolean>;\n    public isLoggedOut$: Observable<boolean>;\n    public connectedUser$: Observable<UserModel>;\n\n    constructor(\n      public Router: Router,\n      private AuthService: AuthService\n    ) { }\n\n    ngOnInit() {\n      this.isLoggedIn$ = this.AuthService.isLoggedIn$;\n      this.isLoggedOut$ = this.AuthService.isLoggedOut$;\n      this.connectedUser$ = this.AuthService.singleUser$;\n    }\n\n  }\n// ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}