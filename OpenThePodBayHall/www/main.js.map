{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.ts","webpack:///./src/app/routes/home-page/home-page.component.html","webpack:///./src/app/routes/home-page/home-page.component.ts","webpack:///./src/app/routes/me-page/me-page.component.html","webpack:///./src/app/routes/me-page/me-page.component.ts","webpack:///./src/app/routes/signin-page/signin-page.component.html","webpack:///./src/app/routes/signin-page/signin-page.component.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/* \nImports\n*/\n  // The \"Component\" interface is needed to declare a component\n  import { Component } from '@angular/core';\n//\n\n/* \nDefinition and export\n\n*/\n  // Definition\n  @Component({\n    // The name of the component selector\n    selector: 'app-root',\n\n    // Content of the vue\n    template: `\n      <app-header></app-header>\n      \n      <!--\n      The \"router-outlet\" directive is used to define where the route components will be load.\n      All components will be load below the \"router-outlet\" directive (check your dev. console)\n      -->\n      <router-outlet></router-outlet>\n    `\n  })\n\n  // Export\n  export class AppComponent {\n    // It's better to put less code has you can in the main component\n  }\n//","/* \nImport and definition\n*/\n  // Basic interfaces to declare an Angular Module\n  import { BrowserModule } from '@angular/platform-browser';\n  import { NgModule } from '@angular/core';\n\n  // Import the interface to enable HTTP request (need to be add in \"imports\" array)\n  import { HttpClientModule } from '@angular/common/http';\n\n  // Import the iterface to create a router (need to be add in \"imports\" array)\n  import { RouterModule } from '@angular/router';\n\n  // Import the application router (need to be associated to \"RouterModule\")\n  import { MainRouter } from \"./app.router\";\n\n  // Import form interfaces for complete form ability (need to be add in \"imports\" array)\n  import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n  // Import the main appication component (need to be add in \"declarations\" array)\n  import { AppComponent } from './app.component';\n\n  // Import the route components (need to be add in \"declarations\" array)\n  import { HomePageComponent } from './routes/home-page/home-page.component';\n  import { SigninPageComponent } from './routes/signin-page/signin-page.component';\n  import { MePageComponent } from './routes/me-page/me-page.component';\n  import { HeaderComponent } from './shared/header/header.component';\n//\n\n\n/* \nConfig and export\n*/\n  // Config\n  @NgModule({\n    declarations: [ // All used component need to be declared in the \"declarations\" array\n      AppComponent,\n      HomePageComponent,\n      SigninPageComponent,\n      MePageComponent,\n      HeaderComponent\n    ],\n    imports: [ // All used module need to be declared in the \"imports\" array\n      BrowserModule,\n      HttpClientModule,\n      RouterModule.forRoot(MainRouter), // Use \"RouterModule\" to define \"MainRouter\" has root router\n      FormsModule, \n      ReactiveFormsModule\n    ],\n    providers: [], // Global provider can be declared in the \"providers\" array\n    bootstrap: [ AppComponent ] // Boostrap property is used to deploy application\n  })\n\n  // Export\n  export class AppModule { }\n//\n","/* \nImports\n*/\n    // Import the iterface to create a router\n    import { Routes } from '@angular/router';\n\n    // Import components used in the routes\n    import { HomePageComponent } from \"./routes/home-page/home-page.component\";\n    import { SigninPageComponent } from \"./routes/signin-page/signin-page.component\";\n    import { MePageComponent } from \"./routes/me-page/me-page.component\";\n//\n\n/* \nExport a contant to define routes\n- Create an array of type Routes\n- Each route is an object:\n    - \"path\" is the endpoint (slash isn't needed)\n    - \"component\" is the component used in the route\n    - Other options are avaible here https://angular.io/api/router/Routes\n*/\n    export const MainRouter: Routes = [\n        {\n            path: '',\n            component: HomePageComponent,\n        },\n        {\n            path: 'signin',\n            component: SigninPageComponent\n        },\n        {\n            path: 'me',\n            component: MePageComponent\n        }\n    ]\n//","module.exports = \"<p>\\n  home-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styles: []\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  me-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-me-page',\n  templateUrl: './me-page.component.html',\n  styles: []\n})\nexport class MePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h2>Signin</h2>\\n\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"signin()\\\">\\n  <input type=\\\"text\\\" name=\\\"first_name\\\" formControlName=\\\"first_name\\\">\\n  <input type=\\\"text\\\" name=\\\"last_name\\\" formControlName=\\\"last_name\\\">\\n  <input type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\n  <input type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n\\n  <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Signin</button>\\n</form>\"","/* \nImports and config\n*/\n\n  // Import the \"OnInit\" interface to enable Angular \"ngOnInit\" hook (cf. code below)\n  import { Component, OnInit } from '@angular/core';\n\n  // Import interface to use Angular form technic\n  import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n  // Import the service you need to use\n  import { AuthService } from \"../../services/auth/auth.service\";\n\n  // Config\n  @Component({\n    selector: 'app-signin-page',\n    templateUrl: './signin-page.component.html',\n    providers: [ AuthService ] // All used service must be declared in the \"providers\" array\n  })\n//\n\n\n/* \nExport\n*/\n  // To use \"ngOnInit\" hook you need to implelment it in the class\n  export class SigninPageComponent implements OnInit {\n\n    // Create a FormGroup form\n    public form: FormGroup;\n\n    // Injectr value in the class\n    constructor(\n      private FormBuilder: FormBuilder, // Inject \"FormBuilder\" in the class\n      private AuthService: AuthService // Inject the service you need to use in the class\n    ) { }\n\n    // Create a function to set from\n    private initForm = () => {\n      // Use \"FormBuilder\" to define your needed form values\n      this.form = this.FormBuilder.group({\n        first_name: [ undefined, Validators.required ],\n        last_name: [ undefined, Validators.required ],\n        email: [ undefined, Validators.required ],\n        password: [ undefined, Validators.required ]\n      })\n    }\n\n    // Create a function to register user\n    public signin = () => {\n      /* \n      Send data to the service\n      - Data must be \"UserModel\" typed (cf. AuthService code)\n      */\n      this.AuthService.signin( this.form.value )\n      .then( apiResponse => console.log(apiResponse) )\n      .catch( apiResponse => console.error(apiResponse) )\n    }\n\n    // Hoook ngOnInit: eq. DOMContentLoaded for a component\n    ngOnInit() {\n      this.initForm()\n    }\n\n  }\n//","/* \nImports and config\n*/\n  // Use environement value\n  import { environment } from \"../../../environments/environment\";\n\n  // The \"Injectable\" interface is needed to define a service\n  import { Injectable } from '@angular/core';\n\n  // The \"HttpClient\" and \"HttpHeaders\" interface is needed to make HTTP request\n  import { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n  // Import the model to type your function/parameters\n  import { UserModel } from \"../../models/user.model\";\n  \n\n  // Config\n  @Injectable({\n    providedIn: 'root'\n  })\n//\n\n\n/* \nExport\n*/\n  export class AuthService {\n\n    // Declare your api URL\n    private apiUrl = `${environment.apiUrl}/auth`;\n\n    constructor(\n      // Inject \"HttpClient\" in the class to use it\n      private HttpClient: HttpClient\n    ) { }\n\n    /* \n    Function to register a user\n    - Param need to be type \"UserModel\"\n    - Function return a Promise\n    */\n    public signin = ( data: UserModel ): Promise<any> => {\n      // Optional: set header request\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n      \n      /* \n      Return a HTTP post request\n      - Param one: API endpoint\n      - Param two: data to send\n      - Param tree (optional): request header\n      */\n      return this.HttpClient.post( `${this.apiUrl}/register`, data, { headers: myHeader } )\n      .toPromise() // Use Promise in an Angular Service\n      .then( apiResponse => Promise.resolve(apiResponse) ) // Resolve Promise success\n      .catch( apiResponse => Promise.reject(apiResponse) ) // Reject Promise error\n    }\n  }\n//","module.exports = \"<header>\\n  <h1>Open the Podbbay Door</h1>\\n  <nav>\\n    <!-- \\n      The \\\"routerLink\\\" directive is used to create a link to a specific vue (slash is needed)\\n    -->\\n    <a [routerLink]=\\\"'/'\\\">Home</a>\\n    <a [routerLink]=\\\"'/signin'\\\">Signin</a>\\n    <a [routerLink]=\\\"'/me'\\\">Me</a>\\n  </nav>\\n</header>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styles: []\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:6578/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}